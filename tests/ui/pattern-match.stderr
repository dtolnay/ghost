error[E0004]: non-exhaustive patterns: `MyPhantom__Phantom::__Phantom(_)` not covered
 --> tests/ui/pattern-match.rs:9:11
  |
9 |     match phantom {
  |           ^^^^^^^ pattern `MyPhantom__Phantom::__Phantom(_)` not covered
  |
note: `MyPhantom__Phantom<u8>` defined here
 --> tests/ui/pattern-match.rs:4:8
  |
3 | #[phantom]
  | ---------- not covered
4 | struct MyPhantom<T: ?Sized>;
  |        ^^^^^^^^^
  = note: the matched value is of type `MyPhantom__Phantom<u8>`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
  |
10~         MyPhantom => {},
11+         MyPhantom__Phantom::__Phantom(_) => todo!()
  |

error[E0004]: non-exhaustive patterns: `MyPhantom__Phantom::__Phantom(_)` not covered
  --> tests/ui/pattern-match.rs:13:11
   |
13 |     match phantom {
   |           ^^^^^^^ pattern `MyPhantom__Phantom::__Phantom(_)` not covered
   |
note: `MyPhantom__Phantom<u8>` defined here
  --> tests/ui/pattern-match.rs:4:8
   |
 3 | #[phantom]
   | ---------- not covered
 4 | struct MyPhantom<T: ?Sized>;
   |        ^^^^^^^^^
   = note: the matched value is of type `MyPhantom__Phantom<u8>`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
14 ~         MyPhantom::<u8> => {},
15 +         MyPhantom__Phantom::__Phantom(_) => todo!()
   |
